{"version":3,"sources":["images/whiskey.jpg","images/hazel.jpg","images/tubby.jpg","DogsList.js","DogDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DogsList","classname","className","this","props","dogs","map","d","key","name","src","alt","Component","DogDetails","dog","col-11","col-lg-5","age","facts","fact","i","to","App","exact","path","render","match","params","currentDog","find","toLowerCase","defaultProps","whiskey","hazel","tubby","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,qQC4B5BC,G,uLAxBP,OACI,yBAAKC,UAAU,WACf,wBAAIC,UAAU,yBAAd,aACA,yBAAKA,UAAU,aACf,yBAAKA,UAAY,OAChBC,KAAKC,MAAMC,KAAKC,KAAI,SAAAC,GAAC,OAClB,yBAAKL,UAAU,2BAA2BM,IAAKD,EAAEE,MACjD,yBAAKC,IAAKH,EAAEG,IAAKC,IAAKJ,EAAEE,OACxB,4BAAKF,EAAEE,iB,GAVAG,c,0DCoCRC,G,6LAjCF,IACEC,EAAQX,KAAKC,MAAbU,IAEP,OACI,yBAAKZ,UAAU,aACf,yBAAKA,UAAU,kBACf,yBAAKa,UAAA,EAAOC,YAAA,GACZ,yBAAKd,UAAU,wBACf,yBAAMA,UAAU,eAAeQ,IAAKI,EAAIJ,IAAKC,IAAKG,EAAIL,OADtD,oBAGA,yBAAKP,UAAU,aACb,wBAAIA,UAAU,cAAcY,EAAIL,MAChC,wBAAIP,UAAU,4BAA4BY,EAAIG,IAA9C,gBAEF,wBAAIf,UAAU,+BACXY,EAAII,MAAMZ,KAAI,SAACa,EAAKC,GAAN,OACX,wBAAIlB,UAAU,kBAAkBM,IAAKY,GACpCD,OAKP,yBAAKjB,UAAU,aACb,kBAAC,IAAD,CAAMmB,GAAG,SAAT,oB,GAxBWT,cCOnBU,E,iLAmCK,IAAD,OASN,OACE,kBAAC,IAAD,KAEA,kBAAC,IAAD,CAAQC,OAAK,EAACC,KAAK,QAASC,OAAQ,kBAAK,kBAAC,EAAD,CAAWpB,KAAM,EAAKD,MAAMC,UACrE,kBAAC,IAAD,CAAQkB,OAAK,EAACC,KAAK,cAAeC,OAZrB,SAAArB,GACb,IAAIK,EAAOL,EAAMsB,MAAMC,OAAOlB,KAC1BmB,EAAa,EAAKxB,MAAMC,KAAKwB,MAC/B,SAAAf,GAAG,OAAGA,EAAIL,KAAKqB,gBAAkBrB,EAAKqB,iBAGxC,OAAO,kBAAC,EAAD,iBAAgB1B,EAAhB,CAAuBU,IAAKc,a,GA1CvBhB,aAAZU,EACGS,aAAc,CACnB1B,KAAK,CACH,CACEI,KAAK,UACLQ,IAAI,EACJP,IAAIsB,IACJd,MAAM,CACJ,+BACA,oCAIH,CACET,KAAK,QACLQ,IAAI,EACJP,IAAIuB,IACJf,MAAM,CACJ,2BACA,iCAGJ,CACET,KAAK,QACLQ,IAAI,EACJP,IAAIwB,IACJhB,MAAM,CACJ,0BACA,iCA4BII,QCvDKa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASZ,MACvB,2DCTNa,IAASd,OAAO,kBAAC,IAAD,KAAe,kBAAC,EAAD,OAAyBe,SAASC,eAAe,SDwH1E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ba75f111.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whiskey.21fc3f5e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hazel.43e1b0c4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tubby.87d26e14.jpg\";","import React, { Component } from 'react';\r\nimport \"./DogsList.css\";\r\nclass DogsList extends Component{\r\n    render(){\r\n        return(\r\n            <div classname=\"DogList\">\r\n            <h1 className=\"display-1 text-center\">Dogs List</h1>\r\n            <div className=\"container\">\r\n            <div className = \"row\">\r\n            {this.props.dogs.map(d =>(\r\n                <div className=\"Dog col-lg-4 text-center\" key={d.name}>\r\n                <img src={d.src} alt={d.name} />\r\n                <h3>{d.name}</h3>\r\n            \r\n            </div>\r\n\r\n            ))}\r\n            \r\n            \r\n            \r\n            </div>\r\n            </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DogsList;","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./DogDetails.css\";\r\n\r\nclass DogDetails extends Component{\r\n    render(){\r\n        let  { dog } = this.props;\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"DogDetails row\">\r\n            <div col-11 col-lg-5>\r\n            <div className=\"DogDetails-card card\">\r\n            <img  className=\"card-img-top\" src={dog.src} alt={dog.name} />\r\n            console.log(src);\r\n            <div className=\"card-body\">\r\n              <h2 className=\"card-title\">{dog.name}</h2>\r\n              <h4 className=\"card-subtitle text-muted\">{dog.age} years old.</h4>\r\n            </div>\r\n            <ul className=\"list-group list-group-flush\">\r\n              {dog.facts.map((fact,i)=>(\r\n                  <li className=\"list-group-item\" key={i}>\r\n                  {fact}\r\n                  </li>\r\n              ))\r\n            }\r\n            </ul>\r\n            <div className=\"card-body\">\r\n              <Link to=\"/dogs\">Go Back</Link> \r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DogDetails;","import React,{Component} from 'react';\nimport DogsList from './DogsList';\n\nimport {Switch,Route} from \"react-router-dom\";\nimport whiskey from \"./images/whiskey.jpg\";\nimport hazel from \"./images/hazel.jpg\";\nimport tubby from \"./images/tubby.jpg\";\n\nimport './App.css';\nimport DogDetails from './DogDetails';\n\nclass App extends Component {\n  static defaultProps ={\n    dogs:[\n      {\n        name:\"whiskey\",\n        age:5,\n        src:whiskey,\n        facts:[\n          \"whiskey loves eating popcorn\",\n          \"whiskey is a terrible guard dog\",\n\n        ]\n      },\n       {\n         name:\"hazel\",\n         age:3,\n         src:hazel,\n         facts:[\n           \"Hazel has so much energy\",\n           \"Hazel is so much intelligent\"\n         ]\n       },\n       {\n         name:\"Tubby\",\n         age:4,\n         src:tubby,\n         facts:[\n           \"tubby loves eating food\",\n           \"tubby doesn't like walking\"\n         ]\n       },\n      \n       \n    ]\n  };\n  render(){\n    const getDog = props => {\n      let name = props.match.params.name;\n      let currentDog = this.props.dogs.find(\n        dog =>dog.name.toLowerCase() === name.toLowerCase()\n      );\n      \n      return <DogDetails {...props} dog={currentDog} />\n    }\n    return (\n      <Switch>\n\n      <Route  exact path=\"/dogs\"  render={()=> <DogsList  dogs={this.props.dogs}/>} />\n      <Route  exact path=\"/dogs/:name\"  render={ getDog} />\n      </Switch>\n      )\n    \n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}